(()=>{"use strict";var r={426:(r,n,e)=>{e.d(n,{Z:()=>h});var t=e(537),a=e.n(t),i=e(645),o=e.n(i),A=e(667),c=e.n(A),d=new URL(e(275),e.b),s=new URL(e(54),e.b),l=new URL(e(760),e.b),p=new URL(e(978),e.b),m=o()(a()),u=c()(d),f=c()(s),g=c()(l),C=c()(p);m.push([r.id,"body{\r\n    height: 95vh;\r\n    background-image: url("+u+");\r\n    color: white;\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    background-attachment: fixed;\r\n    margin: 0;\r\n    padding: 0;\r\n    font-family:'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif\r\n}\r\n\r\n\r\n\r\n\r\n.des{\r\n    flex-direction: column;\r\n    margin: 0;\r\n}\r\n\r\n.weatherIcon{\r\n    height: 75px;\r\n    width: 75px;\r\n}\r\n\r\n#currentCard, form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n\r\n.top {\r\n    display: flex;\r\n    justify-content: space-between;\r\n}\r\n\r\n.top,\r\n.forecast {\r\n    padding-top: 5%;\r\n    margin-left: 5%;\r\n    margin-right: 5%;\r\n}\r\n\r\n#currentCard > * {\r\n    margin: 0;\r\n}\r\n\r\n.highlow {\r\n    display: flex;\r\n    margin: 0;\r\n}\r\n\r\n.forecast{\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, minmax(14rem, 1fr));\r\n    gap: 4%;\r\n    justify-items: center;\r\n    margin-top: 10%;\r\n}\r\n\r\n.card{\r\n    width: 200px;\r\n    display: grid;\r\n    justify-items: center;\r\n    align-content: center;\r\n    background-color: rgba(43,22,78, 0.3);\r\n    border-radius: 10px;\r\n    box-shadow: 0px 0px 5px white;\r\n    transition: 200ms ease-in-out\r\n}\r\n\r\n.card:hover{\r\n    box-shadow: 0 0 7px rgb(63, 245, 63);\r\n}\r\n\r\n.card > *{\r\n    margin: 2px;\r\n    font-weight: bold;\r\n}\r\n\r\n.card > :nth-child(4), :nth-child(5){\r\nfont-weight: normal;\r\ntext-transform: capitalize;\r\n}\r\n\r\n.card > :first-child {\r\n    font-size: clamp(0.5rem, 1.3rem, 1.3rem);\r\n}\r\n\r\n.card > :nth-child(2) {\r\n    font-size: clamp(0.5rem, 1.5rem, 1.5rem);\r\n}\r\n\r\n.card > :nth-child(5){\r\n    font-size: clamp(0.5rem, 0.8rem, 2rem);\r\n}\r\n\r\n#submit{\r\n    display: none;\r\n}\r\n\r\ninput{\r\n    margin-top: 5%;\r\n    background-color: rgb(168 161 161 / 10%);\r\n    border: none;\r\n    border-bottom: 2px solid white;\r\n    padding-left: 4%;\r\n    color: white;\r\n    padding: 3%;\r\n    border-top-right-radius: 5px;\r\n    border-top-left-radius: 5px;\r\n    background-color: rgba(43,22,78, 0.4);\r\n}\r\n\r\ninput::placeholder{\r\n    color:white;\r\n    font-size: 1rem;\r\n    padding-left: 2%;\r\n}\r\n\r\ninput:focus{\r\n    outline: none;\r\n    background-color: rgba(43,22,78, 0.8);\r\n    \r\n}\r\n\r\n.extraInfo > *{\r\n    font-size: 1.7rem;\r\n}\r\n\r\n.feelsLike::before, \r\n.humidity::before,\r\n.windSpeed::before{\r\n    content:\"\";\r\n    display: block;\r\n    width: 30px;\r\n    height: 30px;\r\n    float: left;\r\n    white-space: normal;\r\n    margin-right: 10px;\r\n    margin-left:-50px;\r\n}\r\n\r\n\r\n.feelsLike::before{\r\n   \r\n    background: url("+f+");\r\n    background-size: 100%, 100%;\r\n}\r\n\r\n.humidity::before{\r\n    \r\n    background: url("+g+");\r\n    background-size: 100%, 100%;\r\n}\r\n.humidity::before{\r\n   \r\n    background: url("+g+");\r\n    background-size: 100%, 100%;\r\n}\r\n\r\n.windSpeed::before{\r\n    \r\n    background: url("+C+");\r\n    background-size: 100%, 100%;\r\n}\r\n\r\n\r\n\r\n.active,\r\n.degree {\r\n    \r\n    \r\n    color: white;\r\n    border: 1.5px solid white;\r\n    border: none;\r\n    background-color: rgba(43,22,78, 0);\r\n    font-size: 1rem;\r\n    padding: 3% 6px;\r\n}\r\n\r\n.active {\r\n    background-color: rgb(68,32,105);\r\n    transition: 800ms;\r\n    \r\n}\r\n\r\n.degree:hover{\r\n    cursor: pointer;\r\n}\r\n\r\n.temp {\r\n    margin-top: 3%;\r\n    background-color: rgba(43,22,78, 0.4);\r\n    border-bottom: 2px solid white;\r\n    border-top-right-radius: 5px;\r\n    border-top-left-radius: 5px;\r\n    padding: 0;\r\n}\r\n\r\n.fahrenheit.active{\r\n    border-top-right-radius: 5px;\r\n}\r\n\r\n.celsius.active{\r\n    border-top-left-radius: 5px;\r\n}\r\n\r\n\r\n\r\n@media(max-width: 1500px){\r\n    .forecast{\r\n    grid-template-columns: repeat(auto-fill, minmax(12rem, 1fr));\r\n    }\r\n}\r\n\r\n@media(max-width: 720px){\r\n    .forecast{\r\n        display: flex;\r\n        flex-direction: column;\r\n    }\r\n    .card {\r\n        display: flex;\r\n        width: 100%;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        padding: 0 2%;\r\n        gap: 2%;\r\n        border-bottom: none;\r\n        background-color: rgba(43,22,78, 0.75);\r\n    }\r\n    .card > :first-child {\r\n        font-size: clamp(0.5rem, 1rem, 1.3rem);\r\n    }\r\n    \r\n    .card > :nth-child(2) {\r\n        font-size: clamp(0.5rem, 1.2rem, 1.5rem);\r\n    }\r\n\r\n    .extraInfo > *{\r\n    font-size: 1.3rem;\r\n    }\r\n\r\n    \r\n    \r\n\r\n}\r\n\r\n@media (max-width: 490px){\r\n    .card {\r\n        width: 95%;\r\n        margin: 5% 0;\r\n    }\r\n    .extraInfo{\r\n        margin-left: 20%\r\n    }\r\n\r\n    #location {\r\n        padding-left: 26%;\r\n    }\r\n\r\n    #description {\r\n        margin-left: 20%\r\n    }\r\n\r\n    .extraInfo > *{\r\n        font-size: 1rem;\r\n        }\r\n    \r\n    .active,\r\n    .degree {\r\n    \r\n    font-size: 0.93rem;\r\n    \r\n}\r\n}\r\n\r\n\r\n@media (max-width: 394px){ \r\n    \r\n    .active,\r\n    .degree {  \r\n    font-size: 0.89rem; \r\n}\r\n.forecast{\r\n    margin-top: -1%;\r\n}\r\n\r\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,YAAY;IACZ,yDAAkD;IAClD,YAAY;IACZ,2BAA2B;IAC3B,4BAA4B;IAC5B,4BAA4B;IAC5B,SAAS;IACT,UAAU;IACV;AACJ;;;;;AAKA;IACI,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,YAAY;IACZ,WAAW;AACf;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,uBAAuB;AAC3B;;AAEA;IACI,aAAa;IACb,8BAA8B;AAClC;;AAEA;;IAEI,eAAe;IACf,eAAe;IACf,gBAAgB;AACpB;;AAEA;IACI,SAAS;AACb;;AAEA;IACI,aAAa;IACb,SAAS;AACb;;AAEA;IACI,aAAa;IACb,4DAA4D;IAC5D,OAAO;IACP,qBAAqB;IACrB,eAAe;AACnB;;AAEA;IACI,YAAY;IACZ,aAAa;IACb,qBAAqB;IACrB,qBAAqB;IACrB,qCAAqC;IACrC,mBAAmB;IACnB,6BAA6B;IAC7B;AACJ;;AAEA;IACI,oCAAoC;AACxC;;AAEA;IACI,WAAW;IACX,iBAAiB;AACrB;;AAEA;AACA,mBAAmB;AACnB,0BAA0B;AAC1B;;AAEA;IACI,wCAAwC;AAC5C;;AAEA;IACI,wCAAwC;AAC5C;;AAEA;IACI,sCAAsC;AAC1C;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,cAAc;IACd,wCAAwC;IACxC,YAAY;IACZ,8BAA8B;IAC9B,gBAAgB;IAChB,YAAY;IACZ,WAAW;IACX,4BAA4B;IAC5B,2BAA2B;IAC3B,qCAAqC;AACzC;;AAEA;IACI,WAAW;IACX,eAAe;IACf,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,qCAAqC;;AAEzC;;AAEA;IACI,iBAAiB;AACrB;;AAEA;;;IAGI,UAAU;IACV,cAAc;IACd,WAAW;IACX,YAAY;IACZ,WAAW;IACX,mBAAmB;IACnB,kBAAkB;IAClB,iBAAiB;AACrB;;;AAGA;;IAEI,mDAAoC;IACpC,2BAA2B;AAC/B;;AAEA;;IAEI,mDAAmC;IACnC,2BAA2B;AAC/B;AACA;;IAEI,mDAAmC;IACnC,2BAA2B;AAC/B;;AAEA;;IAEI,mDAAoC;IACpC,2BAA2B;AAC/B;;;;AAIA;;;;IAII,YAAY;IACZ,yBAAyB;IACzB,YAAY;IACZ,mCAAmC;IACnC,eAAe;IACf,eAAe;AACnB;;AAEA;IACI,gCAAgC;IAChC,iBAAiB;;AAErB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,cAAc;IACd,qCAAqC;IACrC,8BAA8B;IAC9B,4BAA4B;IAC5B,2BAA2B;IAC3B,UAAU;AACd;;AAEA;IACI,4BAA4B;AAChC;;AAEA;IACI,2BAA2B;AAC/B;;;;AAIA;IACI;IACA,4DAA4D;IAC5D;AACJ;;AAEA;IACI;QACI,aAAa;QACb,sBAAsB;IAC1B;IACA;QACI,aAAa;QACb,WAAW;QACX,8BAA8B;QAC9B,mBAAmB;QACnB,aAAa;QACb,OAAO;QACP,mBAAmB;QACnB,sCAAsC;IAC1C;IACA;QACI,sCAAsC;IAC1C;;IAEA;QACI,wCAAwC;IAC5C;;IAEA;IACA,iBAAiB;IACjB;;;;;AAKJ;;AAEA;IACI;QACI,UAAU;QACV,YAAY;IAChB;IACA;QACI;IACJ;;IAEA;QACI,iBAAiB;IACrB;;IAEA;QACI;IACJ;;IAEA;QACI,eAAe;QACf;;IAEJ;;;IAGA,kBAAkB;;AAEtB;AACA;;;AAGA;;IAEI;;IAEA,kBAAkB;AACtB;AACA;IACI,eAAe;AACnB;;AAEA",sourcesContent:["body{\r\n    height: 95vh;\r\n    background-image: url(./img/weatherBackground.png);\r\n    color: white;\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    background-attachment: fixed;\r\n    margin: 0;\r\n    padding: 0;\r\n    font-family:'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif\r\n}\r\n\r\n\r\n\r\n\r\n.des{\r\n    flex-direction: column;\r\n    margin: 0;\r\n}\r\n\r\n.weatherIcon{\r\n    height: 75px;\r\n    width: 75px;\r\n}\r\n\r\n#currentCard, form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n\r\n.top {\r\n    display: flex;\r\n    justify-content: space-between;\r\n}\r\n\r\n.top,\r\n.forecast {\r\n    padding-top: 5%;\r\n    margin-left: 5%;\r\n    margin-right: 5%;\r\n}\r\n\r\n#currentCard > * {\r\n    margin: 0;\r\n}\r\n\r\n.highlow {\r\n    display: flex;\r\n    margin: 0;\r\n}\r\n\r\n.forecast{\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, minmax(14rem, 1fr));\r\n    gap: 4%;\r\n    justify-items: center;\r\n    margin-top: 10%;\r\n}\r\n\r\n.card{\r\n    width: 200px;\r\n    display: grid;\r\n    justify-items: center;\r\n    align-content: center;\r\n    background-color: rgba(43,22,78, 0.3);\r\n    border-radius: 10px;\r\n    box-shadow: 0px 0px 5px white;\r\n    transition: 200ms ease-in-out\r\n}\r\n\r\n.card:hover{\r\n    box-shadow: 0 0 7px rgb(63, 245, 63);\r\n}\r\n\r\n.card > *{\r\n    margin: 2px;\r\n    font-weight: bold;\r\n}\r\n\r\n.card > :nth-child(4), :nth-child(5){\r\nfont-weight: normal;\r\ntext-transform: capitalize;\r\n}\r\n\r\n.card > :first-child {\r\n    font-size: clamp(0.5rem, 1.3rem, 1.3rem);\r\n}\r\n\r\n.card > :nth-child(2) {\r\n    font-size: clamp(0.5rem, 1.5rem, 1.5rem);\r\n}\r\n\r\n.card > :nth-child(5){\r\n    font-size: clamp(0.5rem, 0.8rem, 2rem);\r\n}\r\n\r\n#submit{\r\n    display: none;\r\n}\r\n\r\ninput{\r\n    margin-top: 5%;\r\n    background-color: rgb(168 161 161 / 10%);\r\n    border: none;\r\n    border-bottom: 2px solid white;\r\n    padding-left: 4%;\r\n    color: white;\r\n    padding: 3%;\r\n    border-top-right-radius: 5px;\r\n    border-top-left-radius: 5px;\r\n    background-color: rgba(43,22,78, 0.4);\r\n}\r\n\r\ninput::placeholder{\r\n    color:white;\r\n    font-size: 1rem;\r\n    padding-left: 2%;\r\n}\r\n\r\ninput:focus{\r\n    outline: none;\r\n    background-color: rgba(43,22,78, 0.8);\r\n    \r\n}\r\n\r\n.extraInfo > *{\r\n    font-size: 1.7rem;\r\n}\r\n\r\n.feelsLike::before, \r\n.humidity::before,\r\n.windSpeed::before{\r\n    content:\"\";\r\n    display: block;\r\n    width: 30px;\r\n    height: 30px;\r\n    float: left;\r\n    white-space: normal;\r\n    margin-right: 10px;\r\n    margin-left:-50px;\r\n}\r\n\r\n\r\n.feelsLike::before{\r\n   \r\n    background: url(./img/feelsLike.png);\r\n    background-size: 100%, 100%;\r\n}\r\n\r\n.humidity::before{\r\n    \r\n    background: url(./img/humidity.png);\r\n    background-size: 100%, 100%;\r\n}\r\n.humidity::before{\r\n   \r\n    background: url(./img/humidity.png);\r\n    background-size: 100%, 100%;\r\n}\r\n\r\n.windSpeed::before{\r\n    \r\n    background: url(./img/windSpeed.png);\r\n    background-size: 100%, 100%;\r\n}\r\n\r\n\r\n\r\n.active,\r\n.degree {\r\n    \r\n    \r\n    color: white;\r\n    border: 1.5px solid white;\r\n    border: none;\r\n    background-color: rgba(43,22,78, 0);\r\n    font-size: 1rem;\r\n    padding: 3% 6px;\r\n}\r\n\r\n.active {\r\n    background-color: rgb(68,32,105);\r\n    transition: 800ms;\r\n    \r\n}\r\n\r\n.degree:hover{\r\n    cursor: pointer;\r\n}\r\n\r\n.temp {\r\n    margin-top: 3%;\r\n    background-color: rgba(43,22,78, 0.4);\r\n    border-bottom: 2px solid white;\r\n    border-top-right-radius: 5px;\r\n    border-top-left-radius: 5px;\r\n    padding: 0;\r\n}\r\n\r\n.fahrenheit.active{\r\n    border-top-right-radius: 5px;\r\n}\r\n\r\n.celsius.active{\r\n    border-top-left-radius: 5px;\r\n}\r\n\r\n\r\n\r\n@media(max-width: 1500px){\r\n    .forecast{\r\n    grid-template-columns: repeat(auto-fill, minmax(12rem, 1fr));\r\n    }\r\n}\r\n\r\n@media(max-width: 720px){\r\n    .forecast{\r\n        display: flex;\r\n        flex-direction: column;\r\n    }\r\n    .card {\r\n        display: flex;\r\n        width: 100%;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        padding: 0 2%;\r\n        gap: 2%;\r\n        border-bottom: none;\r\n        background-color: rgba(43,22,78, 0.75);\r\n    }\r\n    .card > :first-child {\r\n        font-size: clamp(0.5rem, 1rem, 1.3rem);\r\n    }\r\n    \r\n    .card > :nth-child(2) {\r\n        font-size: clamp(0.5rem, 1.2rem, 1.5rem);\r\n    }\r\n\r\n    .extraInfo > *{\r\n    font-size: 1.3rem;\r\n    }\r\n\r\n    \r\n    \r\n\r\n}\r\n\r\n@media (max-width: 490px){\r\n    .card {\r\n        width: 95%;\r\n        margin: 5% 0;\r\n    }\r\n    .extraInfo{\r\n        margin-left: 20%\r\n    }\r\n\r\n    #location {\r\n        padding-left: 26%;\r\n    }\r\n\r\n    #description {\r\n        margin-left: 20%\r\n    }\r\n\r\n    .extraInfo > *{\r\n        font-size: 1rem;\r\n        }\r\n    \r\n    .active,\r\n    .degree {\r\n    \r\n    font-size: 0.93rem;\r\n    \r\n}\r\n}\r\n\r\n\r\n@media (max-width: 394px){ \r\n    \r\n    .active,\r\n    .degree {  \r\n    font-size: 0.89rem; \r\n}\r\n.forecast{\r\n    margin-top: -1%;\r\n}\r\n\r\n}"],sourceRoot:""}]);const h=m},645:r=>{r.exports=function(r){var n=[];return n.toString=function(){return this.map((function(n){var e="",t=void 0!==n[5];return n[4]&&(e+="@supports (".concat(n[4],") {")),n[2]&&(e+="@media ".concat(n[2]," {")),t&&(e+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),e+=r(n),t&&(e+="}"),n[2]&&(e+="}"),n[4]&&(e+="}"),e})).join("")},n.i=function(r,e,t,a,i){"string"==typeof r&&(r=[[null,r,void 0]]);var o={};if(t)for(var A=0;A<this.length;A++){var c=this[A][0];null!=c&&(o[c]=!0)}for(var d=0;d<r.length;d++){var s=[].concat(r[d]);t&&o[s[0]]||(void 0!==i&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=i),e&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=e):s[2]=e),a&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=a):s[4]="".concat(a)),n.push(s))}},n}},667:r=>{r.exports=function(r,n){return n||(n={}),r?(r=String(r.__esModule?r.default:r),/^['"].*['"]$/.test(r)&&(r=r.slice(1,-1)),n.hash&&(r+=n.hash),/["'() \t\n]|(%20)/.test(r)||n.needQuotes?'"'.concat(r.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):r):r}},537:r=>{r.exports=function(r){var n=r[1],e=r[3];if(!e)return n;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),i="/*# ".concat(a," */");return[n].concat([i]).join("\n")}return[n].join("\n")}},379:r=>{var n=[];function e(r){for(var e=-1,t=0;t<n.length;t++)if(n[t].identifier===r){e=t;break}return e}function t(r,t){for(var i={},o=[],A=0;A<r.length;A++){var c=r[A],d=t.base?c[0]+t.base:c[0],s=i[d]||0,l="".concat(d," ").concat(s);i[d]=s+1;var p=e(l),m={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)n[p].references++,n[p].updater(m);else{var u=a(m,t);t.byIndex=A,n.splice(A,0,{identifier:l,updater:u,references:1})}o.push(l)}return o}function a(r,n){var e=n.domAPI(n);return e.update(r),function(n){if(n){if(n.css===r.css&&n.media===r.media&&n.sourceMap===r.sourceMap&&n.supports===r.supports&&n.layer===r.layer)return;e.update(r=n)}else e.remove()}}r.exports=function(r,a){var i=t(r=r||[],a=a||{});return function(r){r=r||[];for(var o=0;o<i.length;o++){var A=e(i[o]);n[A].references--}for(var c=t(r,a),d=0;d<i.length;d++){var s=e(i[d]);0===n[s].references&&(n[s].updater(),n.splice(s,1))}i=c}}},569:r=>{var n={};r.exports=function(r,e){var t=function(r){if(void 0===n[r]){var e=document.querySelector(r);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(r){e=null}n[r]=e}return n[r]}(r);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(e)}},216:r=>{r.exports=function(r){var n=document.createElement("style");return r.setAttributes(n,r.attributes),r.insert(n,r.options),n}},565:(r,n,e)=>{r.exports=function(r){var n=e.nc;n&&r.setAttribute("nonce",n)}},795:r=>{r.exports=function(r){var n=r.insertStyleElement(r);return{update:function(e){!function(r,n,e){var t="";e.supports&&(t+="@supports (".concat(e.supports,") {")),e.media&&(t+="@media ".concat(e.media," {"));var a=void 0!==e.layer;a&&(t+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),t+=e.css,a&&(t+="}"),e.media&&(t+="}"),e.supports&&(t+="}");var i=e.sourceMap;i&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(t,r,n.options)}(n,r,e)},remove:function(){!function(r){if(null===r.parentNode)return!1;r.parentNode.removeChild(r)}(n)}}}},589:r=>{r.exports=function(r,n){if(n.styleSheet)n.styleSheet.cssText=r;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(r))}}},54:(r,n,e)=>{r.exports=e.p+"dd9208c16da358c03204.png"},760:(r,n,e)=>{r.exports=e.p+"9d62ff68d4bd11c7716a.png"},275:(r,n,e)=>{r.exports=e.p+"9a5ca8a4fa38cae00766.png"},978:(r,n,e)=>{r.exports=e.p+"65164f38e24183850bac.png"}},n={};function e(t){var a=n[t];if(void 0!==a)return a.exports;var i=n[t]={id:t,exports:{}};return r[t](i,i.exports,e),i.exports}e.m=r,e.n=r=>{var n=r&&r.__esModule?()=>r.default:()=>r;return e.d(n,{a:n}),n},e.d=(r,n)=>{for(var t in n)e.o(n,t)&&!e.o(r,t)&&Object.defineProperty(r,t,{enumerable:!0,get:n[t]})},e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(r){if("object"==typeof window)return window}}(),e.o=(r,n)=>Object.prototype.hasOwnProperty.call(r,n),(()=>{var r;e.g.importScripts&&(r=e.g.location+"");var n=e.g.document;if(!r&&n&&(n.currentScript&&(r=n.currentScript.src),!r)){var t=n.getElementsByTagName("script");t.length&&(r=t[t.length-1].src)}if(!r)throw new Error("Automatic publicPath is not supported in this browser");r=r.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=r})(),e.b=document.baseURI||self.location.href,e.nc=void 0,(()=>{function r(r){let n=new Date(1e3*r).getDay();return 0===n?"Sunday":1===n?"Monday":2===n?"Tuesday":3===n?"Wednesday":4===n?"Thursday":5===n?"Friday":6===n?"Saturday":"error day not found"}function n(r){return new Date(1e3*r).getDate()}var t=e(379),a=e.n(t),i=e(795),o=e.n(i),A=e(569),c=e.n(A),d=e(565),s=e.n(d),l=e(216),p=e.n(l),m=e(589),u=e.n(m),f=e(426),g={};g.styleTagTransform=u(),g.setAttributes=s(),g.insert=c().bind(null,"head"),g.domAPI=o(),g.insertStyleElement=p(),a()(f.Z,g),f.Z&&f.Z.locals&&f.Z.locals;const C=document.getElementById("search"),h=document.getElementById("submit"),I=document.getElementById("celsius"),b=document.getElementById("fahrenheit"),B=[];function x(r){let n;r.preventDefault(),C.value?B.push(C.value):B.push("Long Beach"),n=B.at(-1),y(n,"imperial"),b.classList.add("active")}async function y(e,t){const a=await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${e}&APPID=b38535da4099c5606c4a4454851f50ff&units=${t}`),i=await fetch(`https://api.openweathermap.org/data/2.5/forecast/daily?q=${e}&APPID=b38535da4099c5606c4a4454851f50ff&units=${t}`),o=await a.json(),A=await i.json();!function(e){const t=document.getElementById("weatherIcon"),a=document.getElementById("currentWeather"),i=document.getElementById("description"),o=document.getElementById("currentDay"),A=document.getElementById("high"),c=document.getElementById("location"),d=document.getElementById("feelsLike"),s=document.getElementById("humidity"),l=document.getElementById("windSpeed"),p=e.weather[0].icon,m=`L:${Math.floor(e.main.temp_min)}°`,u=`H:${Math.floor(e.main.temp_max)}°`,f=e.dt;c.innerHTML=e.name,o.innerHTML=`${r(f)} ${n(f)}`,a.innerHTML=`${Math.floor(e.main.temp)}°`,i.innerHTML=e.weather[0].description,A.innerHTML=` ${u} / ${m}`,t.src=`http://openweathermap.org/img/wn/${p}@4x.png`,d.innerHTML=`Feels Like: ${Math.floor(e.main.feels_like)}°`,s.innerHTML=`Humidity: ${Math.floor(e.main.humidity)}%`,l.innerHTML=`Wind Speed: ${Math.floor(e.wind.speed)}mph`}(o),function(e){const t=document.querySelectorAll("[data-forecast-day]");t.forEach((a=>{for(let a=1;a<=t.length;a++){const t=document.getElementById(`${a}`),i=document.getElementById(`${a}Afternoon`),o=document.getElementById(`${a}Icon`),A=document.getElementById(`${a}Description`),c=document.getElementById(`${a}Morning`),d=e.list[a].dt,s=e.list[a].weather[0].icon;t.innerHTML=`${r(d)} ${n(d)}`,i.innerHTML=`${Math.floor(e.list[a].temp.day)}°`,o.src=`http://openweathermap.org/img/wn/${s}.png`,A.innerHTML=e.list[a].weather[0].description;const l=`${Math.floor(e.list[a].temp.max)}°`,p=`${Math.floor(e.list[a].temp.min)}°`;c.innerHTML=`H:${l} / L:${p}`}}))}(A)}window.addEventListener("load",x),h.addEventListener("click",x),I.addEventListener("click",(function(r){r.preventDefault(),b.classList.remove("active"),y(B.at(-1),"metric"),I.classList.add("active")})),b.addEventListener("click",(function(r){r.preventDefault(),I.classList.remove("active"),y(B.at(-1),"imperial"),b.classList.add("active")}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,